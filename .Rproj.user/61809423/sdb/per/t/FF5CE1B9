{
    "contents" : "\n\nCDFDif = function(t, x, nu, z, a, Ter, eta=0, sz=0, st=0){\n# purpose: compute probability Pr(T < t, X=x) in Ratcliff's diffusion model\n# arguments:\n#       a   - the boundary separation\n#       Ter - the mean non-decisional component time\n#       eta - the standard deviation of the normal drift distribution\n#       z   - the mean starting point\n#       sz  - the spread of the starting point distribution\n#       st  - the spread of the non-decisional component time distribution\n#       nu  - the mean drift rate\n# output:\n#       the value of the cumulative distribution function evaluated at t\n#       and x for parameters Par, F_{X,T}(x,t) = Pr(X=x,T<=t)\n#\n# remarks:  Fortran source by Francis Tuerlinckx, University of Leuven, Belgium\n# see:      Tuerlinckx (2004) The efficient computation of the cumulative\n#           distribution and probability density functions in the diffusion\n#           model, _Behavior Research Methods, Instruments, & Computers_,\n#           vol. 34 (4), p. 702--716.\n    eps = .Machine$double.eps\n    sqrteps = sqrt(eps)\n    if (any(c(length(z), length(a), length(Ter), length(eta),\n        length(sz), length(st)) != 1))\n        warning(\"This function is not vectorized. \", ifelse(length(t) >\n            1, \"Use cdfdif for a version of this function that is vectorized with respect to the parameter t\",\n            \"\"))\n    if (any(t < 0 | z < 0 | a < 0 | z > a | Ter < 0 | eta < 0 |\n        sz < 0 | st < 0))\n        stop(\"Invalid input. Parameters z, a, Ter, eta, sz, and st should all be non-negative. Parameter z should be less than parameter a.\")\n    if (sz < eps) {\n        sz = sqrteps\n        warning(\"Parameter sz (\", deparse(substitute(sz)), \") set to minimum value \",\n            sqrteps)\n    }\n    if (st < eps) {\n        st = sqrteps\n        warning(\"Parameter st (\", deparse(substitute(st)), \") set to minimum value \",\n            sqrteps)\n    }\n    if (eta < eps) {\n        eta = sqrteps\n        warning(\"Parameter eta (\", deparse(substitute(eta)),\n            \") set to minimum value \", sqrteps)\n    }\n    .C(\"cdfdif\", as.double(t[1]), as.double(x[1]), as.double(c(a[1],\n        Ter[1], eta[1], z[1], sz[1], st[1], nu[1])), CDF = double(1))$CDF\n}\n\ncdfdif = function(t, x, nu, z, a, Ter, eta=0, sz=0, st=0){\n# purpose: compute probability Pr(T < t, X=x) in Ratcliff's diffusion model\n# arguments:\n#       t   - array of repsonse times in seconds\n#       x   - logical indicating wether error (=FALSE) or correct (=TRUE) RTs are provided\n#       a   - the boundary separation\n#       Ter - the mean non-decisional component time\n#       eta - the standard deviation of the normal drift distribution\n#       z   - the mean starting point\n#       sz  - the spread of the starting point distribution\n#       st  - the spread of the non-decisional component time distribution\n#       nu  - the mean drift rate\n# output:\n#       the value of the cumulative distribution function evaluated at t\n#       and x for parameters Par, F_{X,T}(x,t) = Pr(X=x,T<=t)\n#\n# remarks:  Fortran source by Francis Tuerlinckx, University of Leuven, Belgium\n# see:      Tuerlinckx (2004) The efficient computation of the cumulative\n#           distribution and probability density functions in the diffusion\n#           model, _Behavior Research Methods, Instruments, & Computers_,\n#           vol. 34 (4), p. 702--716.\n    if (any(c(length(z), length(a), length(Ter), length(eta),\n        length(sz), length(st)) != 1))\n        warning(\"This function is not vectorized with respect to z, a, Ter, eta, sz, or st.\")\n    if (any(t < 0 | z < 0 | a < 0 | z > a | Ter < 0 | eta < 0 |\n        sz < 0 | st < 0))\n        stop(\"Invalid input. Parameters z, a, Ter, eta, sz, and st should all be non-negative. Parameter z should be less than parameter a.\")\n    eps = .Machine$double.eps\n    sqrteps = sqrt(eps)\n    if (sz < eps) {\n        sz = sqrteps\n        warning(\"Parameter sz (\", deparse(substitute(sz)), \") set to minimum value \",\n            sqrteps)\n    }\n    if (st < eps) {\n        st = sqrteps\n        warning(\"Parameter st (\", deparse(substitute(st)), \") set to minimum value \",\n            sqrteps)\n    }\n    if (eta < eps) {\n        eta = sqrteps\n        warning(\"Parameter eta (\", deparse(substitute(eta)),\n            \") set to minimum value \", sqrteps)\n    }\n    .C(\"cdfdifn\", as.double(t), as.integer(length(t)), as.double(x[1]),\n        as.double(c(a[1], Ter[1], eta[1], z[1], sz[1], st[1],\n            nu[1])), CDF = double(length(t)))$CDF\n}\n",
    "created" : 1371637780617.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1268502224",
    "id" : "FF5CE1B9",
    "lastKnownWriteTime" : 1164299661,
    "path" : "~/Dropbox/Documents/R/R package projects/non R-Forge packages/RTmodels package files/RTmodels/R/CDFDif.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}